// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// connectCPP
List connectCPP(NumericVector dsPixel, int upstream, int downstream, NumericVector value);
RcppExport SEXP _WatershedTools_connectCPP(SEXP dsPixelSEXP, SEXP upstreamSEXP, SEXP downstreamSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dsPixel(dsPixelSEXP);
    Rcpp::traits::input_parameter< int >::type upstream(upstreamSEXP);
    Rcpp::traits::input_parameter< int >::type downstream(downstreamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(connectCPP(dsPixel, upstream, downstream, value));
    return rcpp_result_gen;
END_RCPP
}
// dmat
NumericMatrix dmat(NumericVector x, NumericVector dsPixel, int nx, NumericVector value);
RcppExport SEXP _WatershedTools_dmat(SEXP xSEXP, SEXP dsPixelSEXP, SEXP nxSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dsPixel(dsPixelSEXP);
    Rcpp::traits::input_parameter< int >::type nx(nxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(dmat(x, dsPixel, nx, value));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_WatershedTools_connectCPP", (DL_FUNC) &_WatershedTools_connectCPP, 4},
    {"_WatershedTools_dmat", (DL_FUNC) &_WatershedTools_dmat, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_WatershedTools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
