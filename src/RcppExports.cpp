// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// dCdt_transport_cpp
NumericVector dCdt_transport_cpp(double t, NumericVector y, NumericMatrix adjacencyQ, NumericVector qout, NumericVector qin, NumericVector lateral, NumericVector csArea, NumericVector dx);
RcppExport SEXP _WatershedTools_dCdt_transport_cpp(SEXP tSEXP, SEXP ySEXP, SEXP adjacencyQSEXP, SEXP qoutSEXP, SEXP qinSEXP, SEXP lateralSEXP, SEXP csAreaSEXP, SEXP dxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type adjacencyQ(adjacencyQSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type qout(qoutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type qin(qinSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lateral(lateralSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type csArea(csAreaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dx(dxSEXP);
    rcpp_result_gen = Rcpp::wrap(dCdt_transport_cpp(t, y, adjacencyQ, qout, qin, lateral, csArea, dx));
    return rcpp_result_gen;
END_RCPP
}
// connectCPP
std::vector<int> connectCPP(NumericVector dsPixel, int upstream, int downstream);
RcppExport SEXP _WatershedTools_connectCPP(SEXP dsPixelSEXP, SEXP upstreamSEXP, SEXP downstreamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dsPixel(dsPixelSEXP);
    Rcpp::traits::input_parameter< int >::type upstream(upstreamSEXP);
    Rcpp::traits::input_parameter< int >::type downstream(downstreamSEXP);
    rcpp_result_gen = Rcpp::wrap(connectCPP(dsPixel, upstream, downstream));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_WatershedTools_dCdt_transport_cpp", (DL_FUNC) &_WatershedTools_dCdt_transport_cpp, 8},
    {"_WatershedTools_connectCPP", (DL_FUNC) &_WatershedTools_connectCPP, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_WatershedTools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
